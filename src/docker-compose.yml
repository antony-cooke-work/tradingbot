version: '3.4'

networks:
  botnetwork:
  marketnetwork:
  tradernetwork:

services:
  marketdb:
    image: influxdb:2.0.7
    container_name: ${MARKETDB_SERVER}
    restart: always
    networks:
      - marketnetwork
    ports:
      - ${MARKETDB_SERVER_HTTP_BIND_ADDRESS}:8086
      #- 8086:8086
      #- 8082:8082
      #- 8083:8083
      #- 8089:8089/udp
    volumes:
      - marketdb-volume:/vol01/Docker/market
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_ORG=${MARKETDB_ORGANISATION}
      - DOCKER_INFLUXDB_INIT_BUCKET=${MARKETDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_USERNAME=${MARKETDB_ADMIN_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${MARKETDB_ADMIN_PASSWORD}
      # - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mytoken
  market:
    image: ${DOCKER_REGISTRY-}market
    container_name: market
    depends_on: [marketdb]
    networks:
      - marketnetwork
      - botnetwork
    ports:
      - ${MARKET_PORT}:80
    environment:
      - DB_ORGANISATION=${MARKETDB_ORGANISATION}
      - DB_BUCKET=${MARKETDB_BUCKET}
      - DB_USER=${MARKETDB_ADMIN_USER}
      - DB_PASSWORD=${MARKETDB_ADMIN_PASSWORD}
      - DB_SERVER_ENDPOINT_URI=http://${MARKETDB_SERVER}:${MARKETDB_SERVER_HTTP_BIND_ADDRESS}/
      - DB_TOKEN=${MARKET_API_TOKEN}
      - FIRSTRUN_AFTER=25
      - RUN_INTERVAL=60
      - EXCHANGE_URI=https://api.binance.com
    build:
      context: .
      dockerfile: Market/Dockerfile

  strategy:
    image: ${DOCKER_REGISTRY-}strategy
    container_name: strategy
    depends_on: [market]
    networks:
      - botnetwork
    ports:
      - ${STRATEGY_PORT}:80
    environment:
      - MARKET_API_URI=http://market
    build:
      context: .
      dockerfile: Strategy/Dockerfile

  traderdb:
    image: influxdb:2.0.7
    container_name: ${TRADERDBSERVER}
    restart: always
    networks:
      - tradernetwork
    ports:
      - ${TRADERDBSERVER_HTTP_BIND_ADDRESS}:8086
      #- 8092:8082
      #- 8093:8083
      #- 8099:8089/udp
    volumes:
      - traderdb-volume:/vol01/Docker/trader
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_ORG=${TRADERDBORGANISATION}
      - DOCKER_INFLUXDB_INIT_BUCKET=${TRADERDBBUCKET}
      - DOCKER_INFLUXDB_INIT_USERNAME=${TRADERDBADMIN_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${TRADERDBADMIN_PASSWORD}
      # - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mytoken
  trader:
    image: ${DOCKER_REGISTRY-}trader
    container_name: trader
    depends_on: [traderdb, strategy]
    networks:
      - tradernetwork
      - botnetwork
    ports:
      - ${TRADER_PORT}:80
    environment:
      - DB_ORGANISATION=${TRADERDBORGANISATION}
      - DB_BUCKET=${TRADERDBBUCKET}
      - DB_USER=${TRADERDBADMIN_USER}
      - DB_PASSWORD=${TRADERDBADMIN_PASSWORD}
      - DB_SERVER_ENDPOINT_URI=http://${TRADERDBSERVER}:${TRADERDBSERVER_HTTP_BIND_ADDRESS}/
      - DB_TOKEN=${TRADER_API_TOKEN}
      - FIRSTRUN_AFTER=25
      - RUN_INTERVAL=60
      - MARKET_API_URI=http://market
      - STRATEGY_API_URI=http://strategy
    build:
      context: .
      dockerfile: Trader/Dockerfile

  #mssql:
  #  image: mcr.microsoft.com/azure-sql-edge
  #  container_name: "mssql"
  #  user: root
  #  restart: always
  #  environment:
  #    - ACCEPT_EULA=Y
  #    - MSSQL_SA_PASSWORD=*****
  #  volumes:
  #    - ./data/mssql/data/:/var/opt/mssql/data
  #    - ./data/mssql/log/:/var/opt/mssql/log
  #    - ./data/mssql/secrets/:/var/opt/mssql/secrets
  #  ports:
  #    - 1433:1433

volumes:
  marketdb-volume:
    external: true
  traderdb-volume:
    external: true
